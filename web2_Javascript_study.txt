- html에 javascript가 시작됨을 알려주어야한다.
-> 웹브라우저는 <script></script> 안의 코드를 javascript로 해석한다.
-> 웹페이지에 글씨를 출력할때는 document.write()를 사용한다.

* javascript와 html의 차이
- <h1> JavaScript </h1>
<script>
  document.write('hello world');
</script>
- <h1>html</h1>
helloworld

-> <h1>JavaScript</h1>
<script>
  document.write(1+1);
</script>
-> <h1>html</h1>
1+1
: javascript는 동적으로 1과 1을 더한 결과를 2로 만든 다음에 화면에 출력한다. 하지만 html은 정적이다.

- 버튼 넣기 : <input type="button" value="hi" onclick="alert('hi')">
-> html문서
: onclick의 속성 값으로는 javascript가 와야한다.
: onclick의 속성값은 웹브라우저가 기억하고 있다가 onclick 속성이 위치하고 있는 태그(버튼)에 사용자가 클릭했을때, 기억하고 있던 js코드를 js문법에 따라 해석해서 거기 적혀있는대로 웹브라우저가 동작한다.
* 웹브라우저 위에서 일어나는 것 = 사건(event)
: 어떤 이벤트가 일어났을 떄, 어떠한 js가 실행되도록 하는 것이 onclick이다.
-> 웹브라우저 위에서 일어날 수 있는 event
: onclick, onchange, onkeydown 등(10~20개 정도 정의되어있음)
: 이 이벤트를 이용해서 사용자와 상호작용하는 엡페이지, 웹사이트를 만들 수 있다.

- 마우스우클릭>검사>Console : 파일을 만들지 않고도 javascript 코드를 즉석에서 사용할 수 있다.
-> 데이터를 처리해야되는 경우가 많다. 그런 경우 console창을 열고 바로 처리할 수 있다.
ex) 글자의 개수 세기
-> 복사한 글들을 따옴표로 묶어주면 문자열이 된다. javascript에는 문자열의 문자의 개수를 알려주는 명령어 length이 있다.
-> alert('~~~'.length)

* console에서 실행시키는 javascript는 웹페이지를 대상으로 실행되게 된다.
- 마우스우클릭>검사>elements에서 esc키를 누르면 console창이 밑에 동시에 뜬다. 여기에 입력해서 js코드를 실행할 수 있다.
- 이미 만들어져 있는 웹사이트를 나의 필요에 따라 맥락적으로 간단하면서도 나에게 딱맞는 코드를 작성해서 문제를 해결할 수 있다.
-> 나의 현실의 문제를 쉽게 해결할 수 있다.

- js 데이터타입(자료형)
: boolean, null, undefined, number, string, symbol
- number(숫자)
 -> 산술연산자(+, -, *, /)
- string(문자열)
 -> "", '' 안에 표현
 -> .length : 문자열의 길이
 -> .toUpperCase() : 대문자로 바꿔주는 method
 -> .indexOf('O') : 찾고자 하는 문자의 index
    .indexOf('helloworld') : 찾고자 하는 문자열의 시작 index
 -> .trim() : 공백 삭제
 ...
 * 문자열이냐 숫자냐에 따라 연산이 달라지기 때문에, 데이터타입을 정확하게 표현해야한다.

- CSS 기능: style태그 -> ctrl+f : 찾아서 replace all 가능
- .은 클래스를 의미, #은 id를 의미
- 클래스는 무언가를 그루핑한다. id는 한가지 대상을 식별한다. 를 의미한다. (클래스=반, id=학번)
-> 즉, class위에 id를 얹어 디자인하는게 효율적이므로, 우선순위를 그렇게 정했다. (우선순위가 id가 높다.)
-> .도, #도 안붙이면 그냥 태그
* CSS에서 가장 중요한 문법 중 하나 = 선택자
: 어떤 속성을 누구에게 적용할 것인지 타겟팅하는 것은 중요하다.
: 태그 < class < id
